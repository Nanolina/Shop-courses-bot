generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt           @id
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  points    Int              @default(0)
  courses   Course[]
  purchases CoursePurchase[]
}

model Course {
  id            String           @id @default(uuid())
  name          String
  description   String?
  category      String
  subcategory   String?
  price         Int
  currency      String
  userId        BigInt
  imageUrl      String?
  imagePublicId String?
  isActive      Boolean          @default(true)
  isDeployed    Boolean          @default(false)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  user          User             @relation(fields: [userId], references: [id])
  purchases     CoursePurchase[]
  modules       Module[]
}

model Module {
  id            String   @id @default(uuid())
  name          String
  description   String?
  courseId      String
  imageUrl      String?
  imagePublicId String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  lessons       Lesson[]
  course        Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
}

model Lesson {
  id            String   @id @default(uuid())
  name          String
  description   String?
  moduleId      String
  imageUrl      String?
  imagePublicId String?
  videoUrl      String?
  videoPublicId String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  module        Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)
}

model CoursePurchase {
  id           String   @id @default(uuid())
  customerId   BigInt
  sellerId     BigInt
  courseId     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  course       Course   @relation(fields: [courseId], references: [id])
  customer     User     @relation(fields: [customerId], references: [id])
}
