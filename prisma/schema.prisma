generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int              @id @unique
  name      String?
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  courses   Course[]
  purchases CoursePurchase[]
}

model Course {
  id          String           @id @default(uuid())
  name        String
  description String?
  category    String
  subcategory String?
  price       Float
  currency    String
  userId      Int
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  user        User             @relation(fields: [userId], references: [id])
  purchases   CoursePurchase[]
  image       Image?
  modules     Module[]
}

model Module {
  id          String   @id @default(uuid())
  name        String?
  description String?
  courseId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  course      Course   @relation(fields: [courseId], references: [id])
  videos      Video[]
}

model Video {
  id        String   @id @default(uuid())
  url       String
  moduleId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  module    Module   @relation(fields: [moduleId], references: [id])
}

model Image {
  id        String   @id @default(uuid())
  url       String
  publicId  String?
  courseId  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course    Course   @relation(fields: [courseId], references: [id])
}

model CoursePurchase {
  id           String   @id @default(uuid())
  userId       Int
  courseId     String
  purchaseDate DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  course       Course   @relation(fields: [courseId], references: [id])
  user         User     @relation(fields: [userId], references: [id])
}
